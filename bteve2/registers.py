# EVE Registers

REG_TRACKER                    = 0x7f004000   #   Tracker register 0
REG_TRACKER_1                  = 0x7f004004   #   Tracker register 1
REG_TRACKER_2                  = 0x7f004008   #   Tracker register 2
REG_TRACKER_3                  = 0x7f00400c   #   Tracker register 3
REG_TRACKER_4                  = 0x7f004010   #   Tracker register 4
REG_MEDIAFIFO_READ             = 0x7f004014   #   media FIFO read offset
REG_MEDIAFIFO_WRITE            = 0x7f004018   #   media FIFO write offset
REG_FLASH_SIZE                 = 0x7f004024   #   Detected flash capacity, in Mbytes
REG_ANIM_ACTIVE                = 0x7f00402c   #   32-bit mask of currently playing animations
REG_OBJECT_COMPLETE            = 0x7f004038   #   Used with OPT_COMPLETEREG
REG_EXTENT_X0                  = 0x7f00403c   #   Previous widget pixel extents
REG_EXTENT_Y0                  = 0x7f004040   #   Previous widget pixel extents
REG_EXTENT_X1                  = 0x7f004044   #   Previous widget pixel extents
REG_EXTENT_Y1                  = 0x7f004048   #   Previous widget pixel extents
REG_PLAY_CONTROL               = 0x7f004050   #   Video playback control
REG_ID                         = 0x7f006000   #   Identification register, always reads as 0x7c
REG_FRAMES                     = 0x7f006004   #   Frame counter, since reset
REG_CLOCK                      = 0x7f006008   #   Clock cycles, since reset
REG_FREQUENCY                  = 0x7f00600c   #   Main clock frequency
REG_RE_DEST                    = 0x7f006010   #   RE destination address
REG_RE_FORMAT                  = 0x7f006014   #   RE format, as bitmap format
REG_RE_ROTATE                  = 0x7f006018   #   RE rotate control
REG_RE_W                       = 0x7f00601c   #   RE target width, in pixels
REG_RE_H                       = 0x7f006020   #   RE target height, in pixels
REG_RE_DITHER                  = 0x7f006024   #   RE target dither enable
REG_RE_ACTIVE                  = 0x7f006028   #   RE write path active
REG_RE_RENDERS                 = 0x7f00602c   #   RE render counter
REG_SC0_RESET                  = 0x7f006034   #   Swapchain 0, write to reset
REG_SC0_SIZE                   = 0x7f006038   #   Swapchain 0, ring size 1-4
REG_SC0_PTR0                   = 0x7f00603c   #   Swapchain 0, pointer 0
REG_SC0_PTR1                   = 0x7f006040   #   Swapchain 0, pointer 1
REG_SC0_PTR2                   = 0x7f006044   #   Swapchain 0, pointer 2
REG_SC0_PTR3                   = 0x7f006048   #   Swapchain 0, pointer 3
REG_SC1_RESET                  = 0x7f00604c   #   Swapchain 0, write to reset
REG_SC1_SIZE                   = 0x7f006050   #   Swapchain 0, ring size 1-4
REG_SC1_PTR0                   = 0x7f006054   #   Swapchain 0, pointer 0
REG_SC1_PTR1                   = 0x7f006058   #   Swapchain 0, pointer 1
REG_SC1_PTR2                   = 0x7f00605c   #   Swapchain 0, pointer 2
REG_SC1_PTR3                   = 0x7f006060   #   Swapchain 0, pointer 3
REG_SC2_RESET                  = 0x7f006064   #   Swapchain 0, write to reset
REG_SC2_SIZE                   = 0x7f006068   #   Swapchain 0, ring size 1-4
REG_SC2_PTR0                   = 0x7f00606c   #   Swapchain 0, pointer 0
REG_SC2_PTR1                   = 0x7f006070   #   Swapchain 0, pointer 1
REG_SC2_PTR2                   = 0x7f006074   #   Swapchain 0, pointer 2
REG_SC2_PTR3                   = 0x7f006078   #   Swapchain 0, pointer 3
REG_CPURESET                   = 0x7f006088   #   Coprocessor reset bits 2:JA 1:JT 0:J1
REG_HCYCLE                     = 0x7f00608c   #   Horizontal total cycle count
REG_HOFFSET                    = 0x7f006090   #   Horizontal display start offset
REG_HSIZE                      = 0x7f006094   #   Horizontal display pixel count
REG_HSYNC0                     = 0x7f006098   #   Horizontal sync fall offset
REG_HSYNC1                     = 0x7f00609c   #   Horizontal sync rise offset
REG_VCYCLE                     = 0x7f0060a0   #   Vertical total cycle count
REG_VOFFSET                    = 0x7f0060a4   #   Vertical display start offset
REG_VSIZE                      = 0x7f0060a8   #   Vertical display line count
REG_VSYNC0                     = 0x7f0060ac   #   Vertical sync fall offset
REG_VSYNC1                     = 0x7f0060b0   #   Vertical sync rise offset
REG_DLSWAP                     = 0x7f0060b4   #   DISPLAY list swap control
REG_PCLK_POL                   = 0x7f0060b8   #   PCLK polarity, 0 = clock on rising, 1 = falling
REG_TAG_X                      = 0x7f0060bc   #   Tag query X coordinate
REG_TAG_Y                      = 0x7f0060c0   #   Tag query Y coordinate
REG_TAG                        = 0x7f0060c4   #   Tag query result
REG_VOL_L_PB                   = 0x7f0060c8   #   Volume for playback left
REG_VOL_R_PB                   = 0x7f0060cc   #   Volume for playback right
REG_VOL_SOUND                  = 0x7f0060d0   #   Volume for synth sound
REG_SOUND                      = 0x7f0060d4   #   Sound effect select
REG_PLAY                       = 0x7f0060d8   #   Start effect playback
REG_GPIO_DIR                   = 0x7f0060dc   #   GPIO pin direction, 1 = output
REG_GPIO                       = 0x7f0060e0   #   GPIO read/write
REG_DISP                       = 0x7f0060e4   #   DISP output
REG_INT_FLAGS                  = 0x7f006100   #   Interrupt flags
REG_INT_EN                     = 0x7f006104   #   Global interrupt enable
REG_INT_MASK                   = 0x7f006108   #   Interrupt enable mask
REG_PLAYBACK_START             = 0x7f00610c   #   Audio playback RAM start address
REG_PLAYBACK_LENGTH            = 0x7f006110   #   Audio playback sample length (bytes)
REG_PLAYBACK_READPTR           = 0x7f006114   #   Audio playback current read pointer
REG_PLAYBACK_FREQ              = 0x7f006118   #   Audio playback frequency (Hz)
REG_PLAYBACK_FORMAT            = 0x7f00611c   #   Audio playback format
REG_PLAYBACK_LOOP              = 0x7f006120   #   Audio playback loop enable
REG_PLAYBACK_PLAY              = 0x7f006124   #   Start audio playback
REG_PWM_HZ                     = 0x7f006128   #   PWM output frequency (Hz)
REG_PWM_DUTY                   = 0x7f00612c   #   PWM output duty cycle 0=0\%, 128=100\%
REG_MACRO_0                    = 0x7f006130   #   DISPLAY list macro command 0
REG_MACRO_1                    = 0x7f006134   #   DISPLAY list macro command 1
REG_CMD_READ                   = 0x7f00614c   #   Command buffer read pointer
REG_CMD_WRITE                  = 0x7f006150   #   Command buffer write pointer
REG_CMD_DL                     = 0x7f006154   #   Command DL offset
REG_CTOUCH_EXTENDED            = 0x7f00615c   #   0: single-touch, 1: multi-touch
REG_CTOUCH_TOUCH0_XY           = 0x7f006160   #   Touchscreen screen $(x,y)$ (16, 16)
REG_TOUCH_SCREEN_XY            = 0x7f006160   #   Touchscreen screen $(x,y)$ (16, 16)
REG_CTOUCH_TOUCHA_XY           = 0x7f006164   #   Touchscreen raw $(x,y)$ (16, 16)
REG_TOUCH_RAW_XY               = 0x7f006164   #   Touchscreen raw $(x,y)$ (16, 16)
REG_CTOUCH_TOUCHB_XY           = 0x7f006168   #   Touchscreen touch 2
REG_CTOUCH_TOUCHC_XY           = 0x7f00616c   #   Touchscreen touch 3
REG_CTOUCH_TOUCH4_XY           = 0x7f006170   #   Touchscreen touch 4
REG_TOUCH_TAG_XY               = 0x7f006174   #   Touchscreen screen $(x,y)$ used for tag lookup
REG_TOUCH_TAG                  = 0x7f006178   #   Touchscreen tag result 0
REG_TOUCH_TAG1_XY              = 0x7f00617c   #   Touchscreen screen $(x,y)$ used for tag lookup
REG_TOUCH_TAG1                 = 0x7f006180   #   Touchscreen tag result 1
REG_TOUCH_TAG2_XY              = 0x7f006184   #   Touchscreen screen $(x,y)$ used for tag lookup
REG_TOUCH_TAG2                 = 0x7f006188   #   Touchscreen tag result 2
REG_TOUCH_TAG3_XY              = 0x7f00618c   #   Touchscreen screen $(x,y)$ used for tag lookup
REG_TOUCH_TAG3                 = 0x7f006190   #   Touchscreen tag result 3
REG_TOUCH_TAG4_XY              = 0x7f006194   #   Touchscreen screen $(x,y)$ used for tag lookup
REG_TOUCH_TAG4                 = 0x7f006198   #   Touchscreen tag result 4
REG_TOUCH_TRANSFORM_A          = 0x7f00619c   #   Touchscreen transform coefficient (s15.16)
REG_TOUCH_TRANSFORM_B          = 0x7f0061a0   #   Touchscreen transform coefficient (s15.16)
REG_TOUCH_TRANSFORM_C          = 0x7f0061a4   #   Touchscreen transform coefficient (s15.16)
REG_TOUCH_TRANSFORM_D          = 0x7f0061a8   #   Touchscreen transform coefficient (s15.16)
REG_TOUCH_TRANSFORM_E          = 0x7f0061ac   #   Touchscreen transform coefficient (s15.16)
REG_TOUCH_TRANSFORM_F          = 0x7f0061b0   #   Touchscreen transform coefficient (s15.16)
REG_TOUCH_CONFIG               = 0x7f0061b4   #   Touchscreen configuration
REG_CMDB_SPACE                 = 0x7f006594   #   Command DL (bulk) space available
REG_PLAYBACK_PAUSE             = 0x7f0065d0   #   audio playback pause, 0=play 1=pause
REG_FLASH_STATUS               = 0x7f0065d4   #   Flash status 0=INIT 1=DETACHED 2=BASIC 3=FULL
REG_SO_MODE                    = 0x7f0065f4   #   Scanout pixel mode
REG_SO_SOURCE                  = 0x7f0065f8   #   Scanout 0 source
REG_SO_FORMAT                  = 0x7f0065fc   #   Scanout 0 format
REG_SO_EN                      = 0x7f006600   #   Scanout 0 enable
REG_I2S_EN                     = 0x7f006714   #   I2S interface enable
REG_I2S_FREQ                   = 0x7f006718   #   I2S sample frequency
REG_SC2_STATUS                 = 0x7f006780   #   Swapchain 2 status, write to reset
REG_SC2_ADDR                   = 0x7f006784   #   Swapchain 2 status, write to reset

# System Registers

REG_LVDSRX_CORE_ENABLE         = 0x7f006670   #   LVDSRX enable register
REG_LVDSRX_CORE_CAPTURE        = 0x7f006674   #   LVDSRX enable capture register
REG_LVDSRX_CORE_SETUP          = 0x7f006678   #   LVDSRX pixel setup control register
REG_LVDSRX_CORE_DEST           = 0x7f00667c   #   LVDSRX destination frame address register
REG_LVDSRX_CORE_FORMAT         = 0x7f006680   #   LVDSRX output pixel format register
REG_LVDSRX_CORE_DITHER         = 0x7f006684   #   LVDSRX enable dither register
REG_LVDSRX_CORE_FRAMES         = 0x7f006698   #   LVDSRX frame counter
REG_LVDSRX_SETUP               = 0x7F800500   #   LVDSRX system set-up
REG_LVDSRX_CTRL                = 0x7F800504   #   LVDSRX analog block configuration
REG_LVDSRX_STAT                = 0x7F800508   #   LVDSRX status register
REG_LVDSTX_EN                  = 0x7f800300   #   LVDS enables
REG_LVDSTX_PLLCFG              = 0x7f800304   #   LVDS PLL and Clock configuration
REG_LVDSTX_CTRL_CH0            = 0x7f800314   #   LVDS channel 0 control
REG_LVDSTX_CTRL_CH1            = 0x7f800318   #   LVDS channel 1 control
REG_LVDSTX_STAT                = 0x7f80031c   #   LVDS status
REG_LVDSTX_ERR_STAT            = 0x7f800320   #   LVDS error status

REG_PIN_DRV_0                  = 0x7f800408   #   Pin drive strength setting
REG_PIN_DRV_1                  = 0x7f80040C   #   Pin drive strength setting
REG_PIN_SLEW_0                 = 0x7f800410   #   Pin output slew rate setting
REG_PIN_TYPE_0                 = 0x7f800414   #   Pin type setting
REG_PIN_TYPE_1                 = 0x7f800418   #   Pin type setting
REG_SYS_CFG                    = 0x7f800420   #   Miscellaneous system configuration
REG_SYS_STAT                   = 0x7f800424   #   System status
REG_CHIP_ID                    = 0x7f800448   #   CHIP_ID info
REG_BOOT_STATUS                = 0x7f80044C   #   EVE boot status
REG_DDR_TYPE                   = 0x7f800454   #   DDR DRAM type setting
REG_PIN_DRV_2                  = 0x7f800464   #   Pin drive strength setting
REG_PIN_SLEW_1                 = 0x7f800468   #   Pin output slew rate setting
REG_PIN_TYPE_2                 = 0x7f80046C   #   Pin type setting
REG_I2S_CFG                    = 0x7f800800   #   I2S configuration registers
REG_I2S_CTL                    = 0x7f800804   #   I2S control registers
REG_I2S_STAT                   = 0x7f800810   #   I2S status
REG_I2S_PAD_CFG                = 0x7f800814   #   I2S padding configuration

# Enums

CMDBUF_SIZE                    = 0x4000
RAM_CMD                        = 0x7f000000
RAM_DL                         = 0x7f008000
RAM_G                          = 0
RAM_REPORT                     = 0x7f004800
REG_CMDB_WRITE                     = 0x7f010000
SWAPCHAIN_0                    = 0xffff00ff
SWAPCHAIN_1                    = 0xffff01ff
SWAPCHAIN_2                    = 0xffff02ff

FIFO_MAX = (CMDBUF_SIZE - 4) # Maximum reported free space in the EVE command FIFO
